#!/usr/bin/env python

from __future__ import print_function
import argparse
import nex
import os
import sys


def main():
    parser = argparse.ArgumentParser(
        description='nex2ecl - convert nex plot to ecl Summary')
    parser.add_argument('plt')
    parser.add_argument('-f',
                        '--format',
                        action="store_true",
                        help='Format the output')
    parser.add_argument('-F',
                        '--field',
                        help=('Specify which field FIELD in a multifield '
                              'dataset to output. Note that ecl does not '
                              'support multifield models. The output dataset '
                              'may not be equivalent to the original nex '
                              'plot.'))
    parser.add_argument('-H',
                        '--historical',
                        help=('Include historical data from file HISTORICAL '
                              'in the output summary.'))
    parser.add_argument('-o',
                        '--output',
                        help=('Write output to files with basename OUTPUT or '
                              'place output in directory OUTPUT.'))


    args = parser.parse_args()
    field = args.field
    fmt = args.format
    hst_path = args.historical
    output_path = args.output
    plt_path = args.plt

    plt_dirname, plt_basename = os.path.split(plt_path)
    plt_root, plt_ext = os.path.splitext(plt_basename)
    if not os.path.isfile(plt_path) and not plt_ext:
        plt_path += '.plt'
    if not os.path.isfile(plt_path):
        sys.exit('{} does not exists'.format(os.path.abspath(plt_path)))

    if hst_path:
        hst_root, hst_ext = os.path.splitext(hst_path)
        if not os.path.isfile(hst_path) and not hst_ext:
            hst_path += '.csv'
        if not os.path.isfile(hst_path):
            sys.exit('{} does not exists'.format(os.path.abspath(hst_path)))

    if not output_path:
        case = plt_root.upper()
    elif os.path.isdir(output_path):
        case = os.path.join(output_path, plt_root.upper())
    else:
        dirname, basename = os.path.split(output_path)
        if dirname and not os.path.isdir(dirname):
            sys.exit('{} does not exists'.format(os.path.abspath(dirname)))
        if not basename:
            basename = plt_root
        case = os.path.join(dirname, basename.upper())

    try:
        plt = nex.load(plt_path)
        hplt = None if not hst_path else nex.load_historical(
            hst_path, plt.nx, plt.ny, plt.nz, plt._unit_system)
        ecl_sum = nex._nex2ecl.nex2ecl(
            plt, case, format=fmt, field_name=field, hist_data=hplt)
        ecl_sum.fwrite()
    except nex._nex2ecl.ConversionError as e:
        _, code = e.args
        if code == 1:
            sys.exit('Multifield model not supported by ecl\n'
                     'Try \'nex2ecl --help\' for more information.')
        elif code == 2:
            sys.exit('The specified field is not in the nexus plot')
        else:
            sys.exit('Unknown conversion error')


if __name__ == "__main__":
    main()
